// Code generated by protoc-gen-go. DO NOT EDIT.
// source: app/app-services/proto/market/v1/market.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Coin int32

const (
	Coin_ALL  Coin = 0
	Coin_BTC  Coin = 1
	Coin_ETH  Coin = 2
	Coin_TRX  Coin = 3
	Coin_USDT Coin = 4
)

var Coin_name = map[int32]string{
	0: "ALL",
	1: "BTC",
	2: "ETH",
	3: "TRX",
	4: "USDT",
}

var Coin_value = map[string]int32{
	"ALL":  0,
	"BTC":  1,
	"ETH":  2,
	"TRX":  3,
	"USDT": 4,
}

func (x Coin) String() string {
	return proto.EnumName(Coin_name, int32(x))
}

func (Coin) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b8f3206d87ffc2c5, []int{0}
}

type MarketRequest struct {
	Coin                 Coin     `protobuf:"varint,1,opt,name=coin,proto3,enum=Coin" json:"coin,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketRequest) Reset()         { *m = MarketRequest{} }
func (m *MarketRequest) String() string { return proto.CompactTextString(m) }
func (*MarketRequest) ProtoMessage()    {}
func (*MarketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8f3206d87ffc2c5, []int{0}
}

func (m *MarketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketRequest.Unmarshal(m, b)
}
func (m *MarketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketRequest.Marshal(b, m, deterministic)
}
func (m *MarketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketRequest.Merge(m, src)
}
func (m *MarketRequest) XXX_Size() int {
	return xxx_messageInfo_MarketRequest.Size(m)
}
func (m *MarketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MarketRequest proto.InternalMessageInfo

func (m *MarketRequest) GetCoin() Coin {
	if m != nil {
		return m.Coin
	}
	return Coin_ALL
}

type MarketResponse struct {
	Symbol               string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	OpenPrice            string   `protobuf:"bytes,2,opt,name=open_price,json=openPrice,proto3" json:"open_price,omitempty"`
	ClosePrice           string   `protobuf:"bytes,3,opt,name=close_price,json=closePrice,proto3" json:"close_price,omitempty"`
	LastPrice            string   `protobuf:"bytes,4,opt,name=last_price,json=lastPrice,proto3" json:"last_price,omitempty"`
	PriceChange          string   `protobuf:"bytes,5,opt,name=price_change,json=priceChange,proto3" json:"price_change,omitempty"`
	PriceChangePercent   string   `protobuf:"bytes,6,opt,name=price_change_percent,json=priceChangePercent,proto3" json:"price_change_percent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarketResponse) Reset()         { *m = MarketResponse{} }
func (m *MarketResponse) String() string { return proto.CompactTextString(m) }
func (*MarketResponse) ProtoMessage()    {}
func (*MarketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8f3206d87ffc2c5, []int{1}
}

func (m *MarketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarketResponse.Unmarshal(m, b)
}
func (m *MarketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarketResponse.Marshal(b, m, deterministic)
}
func (m *MarketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarketResponse.Merge(m, src)
}
func (m *MarketResponse) XXX_Size() int {
	return xxx_messageInfo_MarketResponse.Size(m)
}
func (m *MarketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MarketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MarketResponse proto.InternalMessageInfo

func (m *MarketResponse) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *MarketResponse) GetOpenPrice() string {
	if m != nil {
		return m.OpenPrice
	}
	return ""
}

func (m *MarketResponse) GetClosePrice() string {
	if m != nil {
		return m.ClosePrice
	}
	return ""
}

func (m *MarketResponse) GetLastPrice() string {
	if m != nil {
		return m.LastPrice
	}
	return ""
}

func (m *MarketResponse) GetPriceChange() string {
	if m != nil {
		return m.PriceChange
	}
	return ""
}

func (m *MarketResponse) GetPriceChangePercent() string {
	if m != nil {
		return m.PriceChangePercent
	}
	return ""
}

type PriceRequest struct {
	Symbol               string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PriceRequest) Reset()         { *m = PriceRequest{} }
func (m *PriceRequest) String() string { return proto.CompactTextString(m) }
func (*PriceRequest) ProtoMessage()    {}
func (*PriceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8f3206d87ffc2c5, []int{2}
}

func (m *PriceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceRequest.Unmarshal(m, b)
}
func (m *PriceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceRequest.Marshal(b, m, deterministic)
}
func (m *PriceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceRequest.Merge(m, src)
}
func (m *PriceRequest) XXX_Size() int {
	return xxx_messageInfo_PriceRequest.Size(m)
}
func (m *PriceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PriceRequest proto.InternalMessageInfo

func (m *PriceRequest) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

type PriceResponse struct {
	Symbol               string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Price                string   `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PriceResponse) Reset()         { *m = PriceResponse{} }
func (m *PriceResponse) String() string { return proto.CompactTextString(m) }
func (*PriceResponse) ProtoMessage()    {}
func (*PriceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8f3206d87ffc2c5, []int{3}
}

func (m *PriceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceResponse.Unmarshal(m, b)
}
func (m *PriceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceResponse.Marshal(b, m, deterministic)
}
func (m *PriceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceResponse.Merge(m, src)
}
func (m *PriceResponse) XXX_Size() int {
	return xxx_messageInfo_PriceResponse.Size(m)
}
func (m *PriceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PriceResponse proto.InternalMessageInfo

func (m *PriceResponse) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *PriceResponse) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func init() {
	proto.RegisterEnum("Coin", Coin_name, Coin_value)
	proto.RegisterType((*MarketRequest)(nil), "MarketRequest")
	proto.RegisterType((*MarketResponse)(nil), "MarketResponse")
	proto.RegisterType((*PriceRequest)(nil), "PriceRequest")
	proto.RegisterType((*PriceResponse)(nil), "PriceResponse")
}

func init() {
	proto.RegisterFile("app/app-services/proto/market/v1/market.proto", fileDescriptor_b8f3206d87ffc2c5)
}

var fileDescriptor_b8f3206d87ffc2c5 = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x41, 0x6b, 0xea, 0x40,
	0x14, 0x85, 0x5f, 0x34, 0xe6, 0xe9, 0x55, 0xf3, 0xc2, 0x20, 0x8f, 0x3c, 0x41, 0x5e, 0x9b, 0x45,
	0xa9, 0x16, 0x13, 0x6b, 0xbb, 0x2b, 0x5d, 0x54, 0x5b, 0xda, 0x85, 0x05, 0x89, 0x29, 0x94, 0x6e,
	0x24, 0x19, 0x86, 0x36, 0x54, 0x33, 0xd3, 0x4c, 0x14, 0xfa, 0x5f, 0xfb, 0x63, 0x4a, 0xee, 0x44,
	0x88, 0x8b, 0xe2, 0xee, 0xdc, 0x73, 0xbe, 0x84, 0x99, 0x73, 0x07, 0x86, 0xa1, 0x10, 0x5e, 0x28,
	0xc4, 0x50, 0xb2, 0x74, 0x1b, 0x53, 0x26, 0x3d, 0x91, 0xf2, 0x8c, 0x7b, 0xeb, 0x30, 0x7d, 0x67,
	0x99, 0xb7, 0x3d, 0x2f, 0x94, 0x8b, 0xb6, 0x33, 0x80, 0xf6, 0x23, 0xce, 0x3e, 0xfb, 0xd8, 0x30,
	0x99, 0x91, 0x7f, 0xa0, 0x53, 0x1e, 0x27, 0xb6, 0x76, 0xa4, 0x9d, 0x9a, 0xe3, 0x9a, 0x3b, 0xe5,
	0x71, 0xe2, 0xa3, 0xe5, 0x7c, 0x69, 0x60, 0xee, 0x60, 0x29, 0x78, 0x22, 0x19, 0xf9, 0x0b, 0x86,
	0xfc, 0x5c, 0x47, 0x7c, 0x85, 0x7c, 0xc3, 0x2f, 0x26, 0xd2, 0x03, 0xe0, 0x82, 0x25, 0x4b, 0x91,
	0xc6, 0x94, 0xd9, 0x15, 0xcc, 0x1a, 0xb9, 0x33, 0xcf, 0x0d, 0xf2, 0x1f, 0x9a, 0x74, 0xc5, 0x25,
	0x2b, 0xf2, 0x2a, 0xe6, 0x80, 0x96, 0x02, 0x7a, 0x00, 0xab, 0x50, 0x66, 0x45, 0xae, 0xab, 0xef,
	0x73, 0x47, 0xc5, 0xc7, 0xd0, 0xc2, 0x64, 0x49, 0xdf, 0xc2, 0xe4, 0x95, 0xd9, 0x35, 0x04, 0x9a,
	0xe8, 0x4d, 0xd1, 0x22, 0x23, 0xe8, 0x94, 0x91, 0xa5, 0x60, 0x29, 0x65, 0x49, 0x66, 0x1b, 0x88,
	0x92, 0x12, 0x3a, 0x57, 0x89, 0x73, 0x02, 0x2d, 0xfc, 0xfb, 0xae, 0x89, 0x1f, 0xee, 0xe6, 0x5c,
	0x43, 0xbb, 0xe0, 0x0e, 0x94, 0xd0, 0x81, 0x5a, 0xf9, 0xfe, 0x6a, 0x18, 0x5c, 0x82, 0x9e, 0x77,
	0x4a, 0x7e, 0x43, 0xf5, 0x66, 0x36, 0xb3, 0x7e, 0xe5, 0x62, 0x12, 0x4c, 0x2d, 0x2d, 0x17, 0x77,
	0xc1, 0x83, 0x55, 0xc9, 0x45, 0xe0, 0x3f, 0x5b, 0x55, 0x52, 0x07, 0xfd, 0x69, 0x71, 0x1b, 0x58,
	0xfa, 0x98, 0x82, 0xa1, 0xaa, 0x27, 0x7d, 0xa8, 0xdf, 0xb3, 0xa2, 0x87, 0xb6, 0x5b, 0x3e, 0x71,
	0xd7, 0x74, 0xf7, 0x0f, 0xe6, 0x42, 0x63, 0xb1, 0x89, 0x24, 0x4d, 0xe3, 0x88, 0x11, 0xd3, 0xdd,
	0x5b, 0x74, 0xf7, 0x8f, 0xbb, 0xbf, 0xcb, 0x91, 0x36, 0x39, 0x7b, 0xe9, 0x1f, 0x7a, 0x3d, 0x57,
	0x4a, 0x89, 0x28, 0x32, 0x30, 0xb9, 0xf8, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xac, 0x27, 0x00, 0x97,
	0x71, 0x02, 0x00, 0x00,
}
